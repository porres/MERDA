#N canvas 384 32 618 621 12;
#X text 392 516 harmony-voice;
#X text 216 516 root-voice;
#X obj 555 554 bng 25 250 50 0 empty empty empty 17 7 0 10 #b8b8b8 #000000 #000000;
#X text 45 516 mix output;
#X obj 40 132 adc~ 1;
#X obj 40 549 out~;
#N canvas 110 62 1237 560 messages 0;
#N canvas 659 51 569 303 fft 0;
#X msg 37 36 lock \$1;
#X obj 37 16 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 57 138 window \$1;
#X msg 68 177 <;
#X msg 108 176 >;
#X obj 57 66 hradio 15 1 0 6 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0;
#X obj 39 237 outlet;
#X floatatom 57 115 5 0 0 0 - - - 0;
#X text 65 13 phase-lock;
#X text 127 133 if the number is not a power of 2 \, it rounds to the nearest power of two below that number.;
#X text 141 175 navigates through the window options in a loop fashion;
#X text 127 116 Window Size (powers of 2 from 256 to 8192);
#X obj 57 91 expr pow(2 \, ($f1 + 8));
#X text 144 12 Miller Puckette's phase-locking feature;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 2 0 6 0;
#X connect 3 0 6 0;
#X connect 4 0 6 0;
#X connect 5 0 12 0;
#X connect 7 0 2 0;
#X connect 12 0 7 0;
#X restore 214 383 pd fft;
#N canvas 136 23 981 714 shifter 0;
#X msg 129 468 root \$1;
#X floatatom 120 402 5 0 0 0 - - - 0;
#X floatatom 129 444 5 0 0 0 - - - 0;
#X msg 120 421 harm \$1;
#X msg 154 605 harmonizer \$1;
#X obj 154 583 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 109 352 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 19 92 div \$1 \$2;
#X floatatom 20 42 5 0 0 0 - - - 0;
#X floatatom 65 42 5 0 0 0 - - - 0;
#X obj 34 685 outlet;
#X text 185 403 shiffting in cents of harmony-voice;
#X text 187 448 shiffting in cents of root-voice;
#X text 179 581 harmonizer toggle;
#X text 12 17 ratio;
#X text 68 18 steps;
#X text 135 228 scale;
#X msg 86 250 0 220 440 660 880 1100;
#X msg 42 166 div 2 24;
#X text 102 164 (example of quarter-tones division of the octave);
#X msg 60 191 div 3 13;
#X text 120 189 (example of Bohlen-Pierce scale);
#X msg 94 328 print-scale;
#X text 177 327 prints the scale on terminal window;
#X text 468 31 This is something you can only specify through messages sent to the patch. You can click on the "steps" number box in the patch and it will generate an equal division scale based on that number of steps \, but you can't specify which interval ratio will be divided. So it will always divide to the ratio that was set by this message. In the case this value wasn't set by a message \, the default interval value loaded on the patch depends on the loaded scale on the preset;
#X msg 145 516 harm step \$1;
#X msg 147 558 root step \$1;
#X floatatom 145 493 5 0 0 0 - - - 0;
#X floatatom 148 538 5 0 0 0 - - - 0;
#X text 248 601 Makes the shiffting value of harmony-voice to be in an interval relation to the root-voice shift;
#X msg 156 652 portamento \$1;
#X floatatom 156 630 5 0 0 0 - - - 0;
#X text 185 489 shiffting in scale steps of harmony-voice;
#X text 192 536 shiffting in scale steps of root-voice;
#X obj 346 74 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X text 457 33 *;
#X text 168 374 turns autotuner on/off according to the loaded scale;
#X obj 395 328 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X obj 437 489 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X obj 426 536 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X obj 615 652 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X text 247 652 Portamento time in ms to shfit from one interval to the next;
#X msg 32 126 steps \$1;
#X text 92 126 Divides the interval into another number of equal steps;
#X msg 109 374 tuner \$1;
#X obj 602 250 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X text 98 70 Generates a scale that equally divides;
#X text 99 86 an interval ratio in X steps;
#X obj 20 69 pack f f;
#X text 392 71 *;
#X text 238 219 list of numbers: scale steps in cents (needs to star with zero). This allows ANY Kind of scale to be loaded into the patch! The scales are also stored on the presets. It doesn't need to be equal nor end in an octave. The highest value will be interpreted as the new starting point of the next scale cycle. It is also the default interval value that you can divide into equal steps;
#X connect 0 0 10 0;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 3 0 10 0;
#X connect 4 0 10 0;
#X connect 5 0 4 0;
#X connect 6 0 44 0;
#X connect 7 0 10 0;
#X connect 8 0 48 0;
#X connect 9 0 48 1;
#X connect 17 0 10 0;
#X connect 18 0 10 0;
#X connect 20 0 10 0;
#X connect 22 0 10 0;
#X connect 25 0 10 0;
#X connect 26 0 10 0;
#X connect 27 0 25 0;
#X connect 28 0 26 0;
#X connect 30 0 10 0;
#X connect 31 0 30 0;
#X connect 42 0 10 0;
#X connect 44 0 10 0;
#X connect 48 0 7 0;
#X restore 203 337 pd shifter \; tuner;
#N canvas 289 23 909 679 player 0;
#X msg 208 451 bounce;
#X msg 200 422 loop \$1;
#X obj 200 403 hradio 15 1 0 3 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0;
#X msg 38 61 speed \$1;
#X obj 38 38 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0 256;
#X obj 220 482 vsl 11 55 0 1 0 0 empty empty empty 0 -9 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 220 543 master \$1;
#X msg 134 241 location \$1;
#X obj 137 221 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 0;
#X msg 184 374 rewind;
#X obj 179 631 outlet;
#X obj 77 98 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0 256;
#X msg 77 122 target \$1;
#X msg 155 297 time-ms \$1;
#X msg 109 194 play \$1;
#X obj 109 172 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 155 271 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0 256;
#X text 212 243 location slider;
#X msg 170 350 freeze \$1;
#X obj 170 329 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 242 350 Freeze Toggle;
#X text 130 170 Play/Stop Toggle;
#X text 260 423 loop h-radio;
#X text 238 498 Master Volume;
#X text 102 48 Speed of play in %;
#X text 260 449 bounce bang (this changes;
#X text 267 467 the playing direction);
#X msg 232 572 mute;
#X text 270 571 mute/unmute button;
#X text 232 375 rewind button;
#X text 229 297 play from time X in ms;
#X obj 393 298 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X floatatom 255 37 0 0 0 0 - - - 0;
#X text 305 37 This might be handy...;
#X text 143 117 Target duration (or real duration of buffer according to speed) in min.sec/ms (like time number box)*;
#X text 343 152 *affects speed % and vice-vera;
#X obj 255 63 expr int($f1 / 60) + (fmod($f1 \, 60)/100);
#X text 566 57 converts seconds to minutes (integer part) and seconds/ms (decimal part);
#X connect 0 0 10 0;
#X connect 1 0 10 0;
#X connect 2 0 1 0;
#X connect 3 0 10 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 10 0;
#X connect 7 0 10 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 11 0 12 0;
#X connect 12 0 10 0;
#X connect 13 0 10 0;
#X connect 14 0 10 0;
#X connect 15 0 14 0;
#X connect 16 0 13 0;
#X connect 18 0 10 0;
#X connect 19 0 18 0;
#X connect 27 0 10 0;
#X connect 32 0 36 0;
#X connect 36 0 11 0;
#X restore 155 211 pd player;
#N canvas 179 23 1129 628 presets 0;
#X msg 281 443 left;
#X msg 323 443 right;
#X msg 238 413 up;
#X msg 272 413 down;
#X floatatom 41 52 5 0 0 0 - - - 0;
#X msg 87 157 bang;
#X msg 74 130 toggle;
#X obj 102 568 outlet;
#X msg 61 100 name \$1;
#X symbolatom 61 77 10 0 0 0 - - - 0;
#X text 308 413 Navigate Preset Banks;
#X obj 473 406 hradio 15 1 0 4 empty empty empty 0 -8 0 10 #fcfcfc #000000 #000000 0;
#X obj 473 430 + 1;
#X floatatom 473 456 5 0 0 0 - - - 0;
#X text 520 457 preset unit (1 to 4);
#X text 121 129 store/load toggle;
#X text 121 156 store/load bang;
#X msg 473 482 radio \$1;
#X text 536 481 sets the preset radio GUI;
#X text 442 106 The presets include just about every control that's relevant to be saved on your patch.;
#X obj 373 442 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X text 442 35 LOADING AND SAVING PRESETS \; There's a presets folder that stores a preset file whenever you save a preset. You can load this file into any preset number afterwards. The file is stored with the preset name and the file extension .brn;
#X text 82 52 preset number (change preset);
#X text 137 77 preset name (change preset name);
#X text 444 149 Preset numbers are from 1 to 94 \, but only units from 1 to 4 are good (1 to 4 \, 11 to 14 \, 21 to 24 and so on). Thus \, there are 10 groups of presets and a total of 40 presets. If you insert a number that doesn't correspond to a preset \, the default preset (number 1) will be loaded.;
#X msg 101 194 load;
#X msg 232 339 store;
#X msg 126 268 load fast;
#X text 274 340 directly stores presets;
#X text 338 362 Aditional optional arguments can be "preset name" (if symbol) \, "preset number" (if float) or both (in any order).;
#X msg 237 368 store test 33;
#X msg 114 232 load 4;
#X msg 135 305 load fast 24;
#X text 136 195 directly loads presets;
#X msg 232 305 load 34 slowy;
#X text 337 305 you can use both arguments (in any order) *;
#X msg 869 349 load 41 slowy \, store;
#X text 203 262 optinal argument \, preset name (gets file with same name in ./presets subfolder)., f 41;
#X text 170 226 optinal argument \, preset number where to load the preset file, f 32;
#X obj 308 195 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X obj 446 340 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X text 654 285 * the load command only loads the preset and does not store it. But the hint is that \, when you have 2 arguments \, you can store it afterwards by inserting a "store" command message after a comma \, like this:;
#N canvas 503 117 292 299 preset 0;
#X obj 101 101 cnv 15 81 47 empty empty empty 20 12 0 14 #c4d0cc #404040 0;
#X obj 118 117 hradio 16 1 0 4 \$0-preset-save-or-read \$0-get-preset empty 20 -6 0 10 #9ca000 #202020 #202020 0;
#X obj 166 133 bng 16 250 50 0 \$0-preset-bng \$0-preset-bng-set load -27 9 2 12 #9ca000 #202020 #202020;
#X obj 118 133 tgl 16 0 \$0-preset-tgl \$0-preset-tgl-set empty 17 7 0 10 #9ca000 #202020 #202020 0 1;
#X obj 100 117 bng 16 250 50 0 \$0-up-bank \$0-up-bank-set ^ 5 11 2 15 #9cacb8 #c4fcc4 #000000;
#X obj 100 133 bng 16 250 50 0 \$0-down-bank \$0-down-bank-set v 5 8 0 11 #98a8b8 #c4fcc4 #000000;
#X floatatom 100 100 2 0 99 0 - \$0-bank-preset-set \$0-bank-preset 0;
#X symbolatom 114 100 11 0 0 0 - \$0-preset-name-set \$0-preset-name 0;
#X coords 0 -1 1 1 83 49 2 100 100;
#X restore 933 134 pd preset;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 17 0;
#X connect 17 0 7 0;
#X connect 25 0 7 0;
#X connect 26 0 7 0;
#X connect 27 0 7 0;
#X connect 30 0 7 0;
#X connect 31 0 7 0;
#X connect 32 0 7 0;
#X connect 34 0 7 0;
#X restore 111 153 pd presets;
#N canvas 194 38 1102 593 sampler 0;
#X msg 98 184 rec;
#X msg 112 214 pause;
#X msg 25 23 open;
#X msg 127 262 time \$1;
#X floatatom 127 239 0 0.001 60 0 - - - 0;
#X floatatom 130 286 5 5 900 0 - - - 0;
#X msg 130 308 fade \$1;
#X obj 76 540 outlet;
#X msg 139 355 autostart \$1;
#X obj 139 335 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 155 215 Pause and unpause recording;
#X text 169 285 recording fade in/out in ms;
#X text 160 335 Starts playing automatically if toggle on;
#X text 149 155 resets sample rate to Pd's;
#X msg 85 154 reset-SR;
#X msg 47 56 open samples/sax.wav;
#X msg 70 103 open samples/sax.wav 96;
#X text 245 85 optional 2nd argument: sound file's sample rate in Khz - this is needed if different than the one Pd is running at \, since a sample rate compensation is needed both for pitch and time-stretch;
#X msg 156 388 normalize;
#X msg 162 445 auto-normalize \$1;
#X obj 162 425 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X text 296 428 normalizes after recording is finished \; (if not playing simultaneously);
#X obj 365 390 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X obj 519 451 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X obj 342 154 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X obj 687 88 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X text 670 88 *;
#X text 714 124 inside the patch;
#X text 680 110 * You can't set Sample Rate;
#X msg 162 496 export;
#X obj 596 495 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X text 298 458 DEFAULT: ON;
#X text 628 227 ** Note that the help file has this sample that runs at 96Khz and is 4839 ms long. If you're running Pd at the sample rate of 44.1Khz and record on top of this buffer \, the buffer time will be updated to 10535 ms to match the 44.1Khz sample rate.;
#X text 231 390 normalizes buffer;
#X text 412 390 (By the way \, samples are always normalized when loaded);
#X text 189 241 buffer length in min (integer part) and sec/ms (decimal part) - min 100 ms / max 60 min (ms are rounded);
#X text 310 185 (resets sample rate to Pd's automatically**);
#X text 128 185 Records audio input on buffer;
#X text 191 307 (from 5ms to 900ms);
#X text 394 155 (not too useful by the way...);
#X text 212 495 exports recorded buffer to aif file in samples folder;
#X text 198 56 1st argument: sound file (no 2nd argument means that sample rate is the same as Pd's), f 90;
#X text 63 22 open command with no arguments: Choose sound file from computer (sets sample rate according to Pd's), f 100;
#X text 644 333 get file's samle rate (old 3rd arg);
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 14 0 7 0;
#X connect 15 0 7 0;
#X connect 16 0 7 0;
#X connect 18 0 7 0;
#X connect 19 0 7 0;
#X connect 20 0 19 0;
#X connect 29 0 7 0;
#X restore 134 182 pd sampler;
#N canvas 496 146 785 538 random 0;
#X obj 119 481 outlet;
#X obj 144 147 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 179 209 hsl 60 12 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 37 22 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 37 44 speed \$1;
#X obj 221 307 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 202 259 hsl 60 12 0 500 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 199 279 tempo \$1;
#X text 96 43 Random Speed;
#X msg 176 229 range \$1;
#X msg 144 171 shift \$1;
#X text 205 170 Random shift;
#X msg 110 111 play \$1;
#X msg 141 78 2;
#X msg 81 78 0;
#X msg 110 78 1;
#X msg 221 329 loose \$1;
#X text 285 328 Loose Tempo;
#X text 260 279 Random Tempo (0 - 500);
#X text 238 230 Shifting Range (0 - 1);
#X text 173 78 Random Location: 2 => drunk \, 1 => random \, 0 => off;
#X text 174 99 (when play toggle is off \, plays grains of the sample);
#X msg 491 286 chop \$1;
#X obj 491 262 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 501 336 rate \$1;
#X msg 521 390 grain \$1;
#X floatatom 501 312 0 0 0 0 - - - 0;
#X floatatom 521 365 0 0 0 0 - - - 0;
#X text 518 261 turns chopper on \, which plays grains;
#X text 545 284 of sample at a rate in ms;
#X text 582 389 grain size in ms;
#X text 511 418 minimum grain size = window size;
#X text 510 439 maximum grain size = rate amount;
#X text 559 337 rate amount in ms;
#X connect 1 0 10 0;
#X connect 2 0 9 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 5 0 16 0;
#X connect 6 0 7 0;
#X connect 7 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 0 0;
#X connect 12 0 0 0;
#X connect 13 0 12 0;
#X connect 14 0 12 0;
#X connect 15 0 12 0;
#X connect 16 0 0 0;
#X connect 22 0 0 0;
#X connect 23 0 22 0;
#X connect 24 0 0 0;
#X connect 25 0 0 0;
#X connect 26 0 24 0;
#X connect 27 0 25 0;
#X restore 192 291 pd random \; chop;
#N canvas 611 23 601 513 slicer 0;
#X msg 44 50 \$1 L;
#X msg 81 50 \$1 C;
#X msg 119 50 \$1 R;
#X obj 72 13 hsl 50 8 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 84 24 hsl 50 8 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 94 34 hsl 50 8 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc #000000 #000000 0 1;
#X msg 44 80 slider \$2 \$1;
#X msg 80 136 slice \$1;
#X floatatom 80 113 5 0 0 0 - - - 0;
#X floatatom 103 167 5 0 0 0 - - - 0;
#X msg 103 188 min-slice \$1;
#X msg 119 229 L-bng;
#X msg 166 230 R-bng;
#X msg 120 251 L-tgl;
#X msg 167 251 R-tgl;
#X obj 173 313 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000 #000000 0 1;
#X obj 118 433 outlet;
#X text 142 166 minimum slice size (min-size) in seconds;
#X text 213 238 Slicer Bangs and Toggles;
#X text 254 286 shuffles slice;
#X msg 170 286 shuffle-bng;
#X msg 173 335 shuffle-tgl \$1;
#X text 202 313 shuffles slice automatically;
#X text 158 15 slicing-sliders;
#X text 118 111 slice size in seconds;
#X msg 174 366 trim;
#X msg 179 394 untrim;
#X text 229 393 go back to original length;
#X text 200 432 * only when buffer is loaded or fully recorded;
#X text 213 365 trim to selected slice *;
#X connect 0 0 6 0;
#X connect 1 0 6 0;
#X connect 2 0 6 0;
#X connect 3 0 0 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 6 0 16 0;
#X connect 7 0 16 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 10 0 16 0;
#X connect 11 0 16 0;
#X connect 12 0 16 0;
#X connect 13 0 16 0;
#X connect 14 0 16 0;
#X connect 15 0 21 0;
#X connect 20 0 16 0;
#X connect 21 0 16 0;
#X connect 25 0 16 0;
#X connect 26 0 16 0;
#X restore 179 245 pd slicer \; trimmer;
#X obj 119 469 outlet;
#X obj 302 56 cnv 15 45 18 empty empty (extra) 2 9 2 15 #9c9c9c #580000 0;
#X text 45 21 Messages can change every single GUI control of the abstraction. Some extra features are only possible via messages and are marked here as:, f 51;
#X text 44 83 Check bellow all message groups. The contrls will become clearer then..., f 51;
#X text 879 293 <-- Buffer time (min:sec | ms);
#X text 879 352 <-- Real Time (min:sec / ms);
#X text 879 379 <-- Player time (min:sec / ms);
#X text 879 330 <-- Target buffer in min.sec (relates to speed);
#X obj 352 190 brane.m~;
#X connect 0 0 7 0;
#X connect 1 0 7 0;
#X connect 2 0 7 0;
#X connect 3 0 7 0;
#X connect 4 0 7 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X restore 58 168 pd messages and manual;
#X f 11;
#X text 13 18 This module consist of a ganulator sampler with stretch/compress and a harmonizer pitch shifter. The sampler records or plays mono files and runs two Pitch Shifters for a "root" and a "harmony" voice. An autotuner can quantize pitches to any scale (and has a built-in scale generator based on Equal Divisions). You have automatic looping \, bouncing \, freeze and selection of audio slices \, and also a granulator and random playing settings. You can load/store 40 presets., f 82;
#X text 96 132 Record audio input;
#X obj 211 549 out~;
#X text 453 552 When reaching loop bounds, f 13;
#X text 145 177 <--;
#X text 172 170 details on controls and manual of operation, f 23;
#X obj 40 223 brane.m~ 1 bubul.wav;
#X connect 4 0 13 0;
#X connect 6 0 13 0;
#X connect 13 0 5 0;
#X connect 13 1 9 0;
#X connect 13 2 9 1;
#X connect 13 3 2 0;
